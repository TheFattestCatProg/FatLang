
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftEENELSGRLEGEleftORleftXORleftANDleftLSHIFTRSHIFTleftPLUSMINUSleftTIMESDIVIDEMODrightCASTrightUMINUSleft.leftGETTERACCMOD AND ANDEQ BINOP BOOL CHAR CLASS COMMENT CONST DIVIDE DIVIDEEQ EE ELSE EXTERN FLOAT FOR FUNCMOD GE GR ID IF INT INTERFACE LCOMMENT LE LS LSHIFT LSHIFTEQ MACRO MINUS MINUSEQ MOD MODEQ NE NUM OPERATOR OR OREQ PACKAGE PLUS PLUSEQ RETURN RSHIFT RSHIFTEQ SIZEOF STR STRUCT TIMES TIMESEQ TYPEID TYPESTR UNSAFE USING VAR WHILE XOR XOREQcode : package-declaration import-declarations main-codepackage-declaration : PACKAGE ID ';'\n                            | PACKAGE package-complicated-name ';'\n    package-complicated-name : package-complicated-name ':' ID\n                                | ID ':' ID\n    package-complicated-name :\n    import-declarations : import-declarations import-declaration\n                           | import-declaration\n                           |\n    import-declaration : USING ID ';'\n                        | USING package-complicated-name ';'\n    main-code : main-code main\n                |\n    main : ID ID function-arguments function-body\n            | complicated-type ID function-arguments function-body\n    main : ID ID template-declaration function-arguments function-body\n            | complicated-type ID template-declaration function-arguments function-body\n    main : UNSAFE ID ID function-arguments function-body\n            | UNSAFE complicated-type ID function-arguments function-body\n    main : UNSAFE ID ID template-declaration function-arguments function-body\n            | UNSAFE complicated-type ID template-declaration function-arguments function-body\n    main : ID OPERATOR binary-operator function-arguments function-body\n            | ID OPERATOR TIMES function-arguments function-body\n            | ID OPERATOR LS function-arguments function-body\n            | ID OPERATOR GR function-arguments function-body\n            | complicated-type OPERATOR binary-operator function-arguments function-body\n            | complicated-type OPERATOR TIMES function-arguments function-body\n            | complicated-type OPERATOR LS function-arguments function-body\n            | complicated-type OPERATOR GR function-arguments function-body\n    main : ID OPERATOR binary-operator template-declaration function-arguments function-body\n            | ID OPERATOR TIMES template-declaration function-arguments function-body\n            | ID OPERATOR LS template-declaration function-arguments function-body\n            | ID OPERATOR GR template-declaration function-arguments function-body\n            | complicated-type OPERATOR binary-operator template-declaration function-arguments function-body\n            | complicated-type OPERATOR TIMES template-declaration function-arguments function-body\n            | complicated-type OPERATOR LS template-declaration function-arguments function-body\n            | complicated-type OPERATOR GR template-declaration function-arguments function-body\n    main : ID OPERATOR binary-operator '(' ')' function-arguments function-body\n            | ID OPERATOR '!' '(' ')' function-arguments function-body\n            | complicated-type OPERATOR binary-operator '(' ')' function-arguments function-body\n            | complicated-type OPERATOR '!' '(' ')' function-arguments function-body\n    main : ID OPERATOR binary-operator '(' ')' template-declaration function-arguments function-body\n            | ID OPERATOR '!' '(' ')' template-declaration function-arguments function-body\n            | complicated-type OPERATOR binary-operator '(' ')' template-declaration function-arguments function-body\n            | complicated-type OPERATOR '!' '(' ')' template-declaration function-arguments function-body\n    main : ID OPERATOR '(' ')' function-arguments function-body\n            | complicated-type OPERATOR '(' ')' function-arguments function-body\n    main : OPERATOR '~' function-arguments function-body\n    main : OPERATOR '~' template-declaration function-arguments function-body\n    main : ID OPERATOR '[' ']' function-arguments function-body\n            | complicated-type OPERATOR '[' ']' function-arguments function-body\n    main : ID OPERATOR '[' ']' template-declaration function-arguments function-body\n            | complicated-type OPERATOR '[' ']' template-declaration function-arguments function-body\n    main : ID OPERATOR '=' function-arguments function-body\n            | complicated-type OPERATOR '=' function-arguments function-body\n    main : ID OPERATOR '=' template-declaration function-arguments function-body\n            | complicated-type OPERATOR '=' template-declaration function-arguments function-body\n    main : EXTERN ID ID function-arguments ';'\n            | EXTERN complicated-type ID function-arguments ';'\n    complicated-type : package-complicated-name ':' ID\n                        | package-complicated-name ':' ID TIMES\n                        | package-complicated-name ':' ID complicated-pointer-level\n    complicated-type : ID ':' ID\n                        | ID ':' ID TIMES\n                        | ID ':' ID complicated-pointer-level\n    complicated-type : package-complicated-name ':' ID template-declaration\n                        | package-complicated-name ':' ID template-declaration TIMES\n                        | package-complicated-name ':' ID template-declaration complicated-pointer-level\n    complicated-type : ID ':' ID template-declaration\n                        | ID ':' ID template-declaration TIMES\n                        | ID ':' ID template-declaration complicated-pointer-level\n    complicated-type : ID template-declaration\n                        | ID template-declaration TIMES\n                        | ID template-declaration complicated-pointer-level\n    complicated-type : ID TIMES\n                        | ID complicated-pointer-level\n    complicated-type : CONST complicated-typecomplicated-pointer-level : complicated-pointer-level TIMES\n                                | TIMES TIMES\n    template-declaration : LS template-declaration-body GR\n    template-declaration : LS ID GR\n    template-declaration : LS complicated-type GR\n    template-declaration-body : template-declaration-body ',' ID\n                                | template-declaration-body ',' complicated-type\n    template-declaration-body :  ID ',' ID\n                                | complicated-type ',' ID\n    template-declaration-body : ID ',' complicated-type\n                                | complicated-type ',' complicated-type\n    function-arguments : '(' function-arguments-body ')'\n                        | '(' ')'\n    function-arguments-body : function-arguments-body ',' function-argument\n                        | function-argument\n    function-argument : ID ID\n                        | complicated-type ID\n    function-body : '{' expression-lines '}'main : STRUCT ID struct-bodymain : STRUCT ID template-declaration struct-bodymain : EXTERN STRUCT ID struct-bodystruct-body : '{' struct-fields '}'struct-fields : struct-fields struct-field\n                    |\n    struct-field : ID ID ';'\n                    | complicated-type ID ';'\n    struct-field : ACCMOD ID ID ';'\n                    | ACCMOD complicated-type ID ';'\n    expression-lines : expression-lines expression-line\n                        | expression-line\n                        |\n    expression-line : complicated-expression ';'\n                        | return-statement\n                        | variable-declaration\n                        | if-statement\n                        | while-statement\n                        | unsafe-area\n                        | visibility-area\n                        | set-statement\n    expression-line : ID ';'return-statement : RETURN complicated-expression ';'\n                        | RETURN ID ';'\n    variable-declaration : ID ID ';'\n                            | complicated-type ID ';'\n    variable-declaration : ID ID '=' ID ';'\n                            | complicated-type ID '=' ID ';'\n    variable-declaration : ID ID '=' complicated-expression ';'\n                            | complicated-type ID '=' complicated-expression ';'\n    variable-declaration : VAR ID '=' ID ';'\n                            | VAR ID '=' complicated-expression ';'\n    if-statement : IF complicated-expression visibility-area\n                    | IF complicated-expression visibility-area ELSE visibility-area\n                    | IF complicated-expression visibility-area ELSE if-statement\n    if-statement : IF ID visibility-area\n                    | IF ID visibility-area ELSE visibility-area\n                    | IF ID visibility-area ELSE if-statement\n    while-statement : WHILE complicated-expression visibility-areawhile-statement : WHILE ID visibility-areaunsafe-area : UNSAFE visibility-areacomplicated-expression : UNSAFE complicated-expressioncomplicated-expression : '[' ']'\n    complicated-expression : '[' ID ']'\n                            | '[' complicated-expression ']'\n    complicated-expression : '[' invoke-arguments-list ']'\n    complicated-expression : ID '{' invoke-arguments-list '}'\n                                | complicated-type '{' invoke-arguments-list '}'\n    complicated-expression : ID '{' ID '}'\n                                | ID '{' complicated-expression '}'\n                                | complicated-type '{' ID '}'\n                                | complicated-type '{' complicated-expression '}'\n    complicated-expression : ID '{' '}'\n                                | complicated-type '{' '}'\n    complicated-expression : ID '[' ID ']'\n                            | ID '[' complicated-expression ']'\n                            | complicated-expression '[' ID ']'\n                            | complicated-expression '[' complicated-expression ']'\n    set-statement : ID '=' ID ';'\n                    | complicated-expression '=' ID ';'\n    set-statement : ID '=' complicated-expression ';'\n                    | complicated-expression '=' complicated-expression ';'\n    visibility-area : function-bodyconstant-expression : INT\n                            | FLOAT\n                            | STR\n                            | BOOL\n                            | CHAR\n    complicated-expression : TIMES ID\n                            | TIMES complicated-expression\n    complicated-expression : AND ID\n                            | AND complicated-expression\n    complicated-expression : ID '.' ID %prec GETTER\n                            | complicated-expression '.' ID %prec GETTER\n    complicated-expression : SIZEOF '(' ID ')'\n                            | SIZEOF '(' complicated-type ')'\n    complicated-expression : ID invoke-arguments\n    complicated-expression : ID ':' ID invoke-arguments\n    complicated-expression : package-complicated-name ':' ID invoke-arguments\n    complicated-expression : ID template-declaration invoke-arguments\n    complicated-expression : ID ':' ID template-declaration invoke-arguments\n    complicated-expression : package-complicated-name ':' ID template-declaration invoke-arguments\n    complicated-expression : ID '.' ID invoke-arguments\n                            | complicated-expression '.' ID invoke-arguments\n    complicated-expression : ID '.' ID template-declaration invoke-arguments\n                            | complicated-expression '.' ID template-declaration invoke-arguments\n    invoke-arguments : '(' ')'\n    invoke-arguments : '(' ID ')'\n                        | '(' complicated-expression ')'\n    invoke-arguments : '(' invoke-arguments-list ')'\n    invoke-arguments-list : invoke-arguments-list ',' ID\n                            | invoke-arguments-list ',' complicated-expression\n    invoke-arguments-list : ID ',' ID\n                            | complicated-expression ',' ID\n    invoke-arguments-list : ID ',' complicated-expression\n                            | complicated-expression ',' complicated-expression\n    complicated-expression : ID binary-operator ID\n                            | ID TIMES ID\n                            | ID LS ID\n                            | ID GR ID\n                            | complicated-expression binary-operator ID\n                            | complicated-expression LS ID\n                            | complicated-expression GR ID\n                            | complicated-expression TIMES ID\n                            | ID binary-operator complicated-expression\n                            | ID LS complicated-expression\n                            | ID GR complicated-expression\n                            | ID TIMES complicated-expression\n                            | complicated-expression binary-operator complicated-expression\n                            | complicated-expression LS complicated-expression\n                            | complicated-expression GR complicated-expression\n                            | complicated-expression TIMES complicated-expression\n    complicated-expression : MINUS ID %prec UMINUS\n                            | MINUS complicated-expression %prec UMINUS\n                            | '!' ID %prec UMINUS\n                            | '!' complicated-expression %prec UMINUS\n    complicated-expression : constant-expressioncomplicated-expression : '(' ID ')'\n                            | '(' complicated-expression ')'\n    complicated-expression : '(' ID ')' ID %prec CAST\n                            | '(' ID ')' complicated-expression %prec CAST\n    complicated-expression : '(' complicated-type ')' ID %prec CAST\n                            | '(' complicated-type ')' complicated-expression %prec CAST\n    sub-equal-operator : PLUSEQ\n                        | MINUSEQ\n                        | TIMESEQ\n                        | DIVIDEEQ\n                        | MODEQ\n                        | ANDEQ\n                        | OREQ\n                        | XOREQ\n                        | LSHIFTEQ\n                        | RSHIFTEQ\n    complicated-expression : ID sub-equal-operator ID\n                        | complicated-expression sub-equal-operator ID\n                        | ID sub-equal-operator complicated-expression\n                        | complicated-expression sub-equal-operator complicated-expression\n    binary-operator : PLUS\n                        | MINUS\n                        | DIVIDE\n                        | MOD\n                        | AND\n                        | OR\n                        | XOR\n                        | LSHIFT\n                        | RSHIFT\n                        | LE\n                        | GE\n                        | EE\n                        | NE\n    "
    
_lr_action_items = {'PACKAGE':([0,],[3,]),'$end~':([21,],[41,]),'(':([30,32,37,38,41,50,54,55,56,57,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,83,84,85,86,88,90,91,92,94,95,96,103,111,114,116,118,119,121,123,124,126,128,136,139,141,143,144,146,148,150,152,163,164,166,167,168,169,170,171,172,173,174,175,177,178,179,180,182,183,185,187,188,189,202,210,212,226,234,236,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,276,277,281,282,283,284,285,286,287,288,289,291,292,295,298,300,302,305,309,311,314,317,319,323,329,335,341,352,353,355,357,359,361,363,365,366,367,368,372,374,375,377,379,380,382,385,387,389,392,396,398,400,403,405,406,409,411,412,413,414,415,416,417,418,419,420,438,439,440,441,449,451,452,453,454,458,461,462,467,471,473,476,477,481,490,491,494,495,497,498,499,500,501,502,],[51,58,51,87,51,51,112,51,51,51,120,51,-233,-234,-235,-236,-237,-238,-239,-240,-241,-242,-243,-244,-245,51,137,51,51,51,145,51,51,51,51,51,51,180,51,51,51,51,51,51,51,-80,-81,-82,51,51,51,51,51,51,51,51,51,180,-107,-110,-111,-112,-113,-114,-115,-116,288,180,180,180,180,304,180,180,180,180,180,180,-158,51,51,51,51,51,51,-95,-106,-109,180,180,180,180,180,180,180,-219,-220,-221,-222,-223,-224,-225,-226,-227,-228,-117,180,180,288,180,180,180,180,180,180,180,180,-136,288,288,180,288,288,288,288,288,288,288,288,51,51,51,51,288,288,288,288,288,288,288,288,-120,180,288,288,288,288,288,288,180,288,288,288,288,288,180,180,180,288,-121,180,180,180,288,-118,-119,180,-128,-131,180,-134,-135,288,-157,-155,288,288,288,-81,-154,-156,288,288,288,288,288,288,288,288,288,-122,-124,-123,-125,-126,-127,-129,-130,-132,-133,]),'GR':([31,32,33,36,38,47,52,53,75,76,77,78,79,80,101,124,126,128,130,131,132,160,161,162,165,173,184,190,191,192,193,194,215,216,217,218,219,220,221,222,251,252,279,281,283,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,412,435,436,437,441,442,443,444,445,446,447,448,450,451,452,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,481,482,489,492,493,496,],[-72,57,-75,-76,86,-77,-73,-74,-79,124,126,128,-63,-78,-60,-80,-81,-82,-64,-65,-69,-61,-62,-66,260,285,-212,-159,-160,-161,-162,-163,-83,-84,-85,-87,-88,-86,-70,-71,-67,-68,-172,-72,-75,260,285,-138,285,260,285,-165,285,-167,285,260,-208,-209,-210,-211,260,285,260,285,260,285,260,285,-169,260,285,-205,285,-206,285,-207,285,260,285,260,285,285,-148,260,285,260,-168,-63,-175,285,260,285,-79,-203,452,-201,128,285,-202,285,260,285,260,-182,285,260,-139,-140,-141,-149,285,260,-213,-214,-60,-153,-152,-179,285,260,-144,-142,-145,-150,-151,-178,-173,-69,-81,-183,-184,-185,285,260,260,285,285,260,-143,-146,-147,285,260,-170,-171,-215,-216,-217,-218,-174,-66,285,260,285,260,-181,-180,-176,-177,]),',':([31,33,36,47,52,53,75,76,77,78,79,80,101,105,107,124,126,128,130,131,132,160,161,162,184,190,191,192,193,194,198,199,215,216,217,218,219,220,221,222,251,252,279,281,283,290,294,295,296,297,300,301,302,303,309,310,311,312,320,353,354,355,356,357,358,359,360,361,362,363,368,369,370,371,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,391,392,393,394,395,397,399,401,402,403,404,409,410,412,435,436,437,443,444,445,446,447,448,450,451,452,455,456,457,458,459,460,461,462,463,464,465,466,469,470,471,472,473,474,475,476,481,482,489,492,493,496,],[-72,-75,-76,-77,-73,-74,-79,125,127,129,-63,-78,-60,197,-92,-80,-81,-82,-64,-65,-69,-61,-62,-66,-212,-159,-160,-161,-162,-163,-93,-94,-83,-84,-85,-87,-88,-86,-70,-71,-67,-68,-172,-72,-75,-137,-138,396,398,400,-164,-165,-166,-167,-208,-209,-210,-211,-91,-169,-204,-196,-205,-197,-206,-198,-207,-199,-232,-230,396,400,-148,398,-168,-63,-175,-192,-200,-193,-79,-203,127,-201,129,-195,-202,-229,-231,-182,396,398,400,-139,-140,-141,400,-149,396,398,-213,-214,-60,-153,-152,-179,-144,-142,-145,-150,-151,-178,-173,-69,-81,-183,-184,-185,-188,-190,-191,-189,-186,-187,-143,-146,-147,-170,-171,-215,-216,-217,-218,-174,-66,396,398,-181,-180,-176,-177,]),'{':([31,33,36,45,47,49,52,53,75,79,80,81,93,97,99,101,103,104,106,110,113,115,117,122,124,126,128,130,131,132,134,135,138,140,142,147,149,151,154,160,161,162,163,164,166,167,168,169,170,171,172,173,174,176,184,189,190,191,192,193,194,196,201,202,204,206,208,209,211,214,221,222,225,226,228,230,232,233,235,238,240,242,251,252,253,254,255,275,279,281,283,290,291,292,293,294,295,300,301,302,303,305,307,309,310,311,312,314,316,317,318,319,322,328,331,334,340,343,352,353,354,355,356,357,358,359,360,361,362,363,365,366,368,370,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,395,397,399,402,403,405,409,410,412,413,414,416,417,418,419,420,422,424,427,429,435,436,437,439,440,441,443,444,445,446,447,448,450,451,452,453,454,455,456,457,458,461,462,464,465,466,467,469,470,471,472,473,474,475,476,477,479,480,481,489,490,491,492,493,494,495,496,497,498,499,500,501,502,],[-72,-75,-76,100,-77,103,-73,-74,-79,-63,-78,103,103,100,100,-60,103,103,-90,103,103,103,103,103,-80,-81,-82,-64,-65,-69,103,103,103,103,103,103,103,103,103,-61,-62,-66,103,-107,-110,-111,-112,-113,-114,-115,-116,276,103,298,-212,-158,-159,-160,-161,-162,-163,-89,103,-90,103,103,103,103,103,103,-70,-71,103,-90,103,103,103,103,103,103,103,103,-67,-68,-95,-106,-109,-117,-172,-72,-75,-137,-136,276,298,-138,276,276,-165,276,-167,276,298,-208,-209,-210,-211,276,103,418,103,418,103,103,103,103,103,103,276,-169,-204,276,-205,276,-206,276,-207,276,-232,276,276,-120,276,-148,276,-168,-63,-175,276,-200,276,-79,-203,276,-201,298,276,-202,276,-231,276,-182,276,-139,-140,-141,-149,276,-121,-213,-214,-60,-118,-119,-128,-131,103,-134,-135,103,103,103,103,-153,-152,-179,-157,-155,276,-144,-142,-145,-150,-151,-178,-173,-69,-81,-154,-156,-183,-184,-185,276,276,276,-143,-146,-147,276,-170,-171,-215,-216,-217,-218,-174,-66,276,103,103,276,-181,-122,-124,-180,-176,-123,-125,-177,-126,-127,-129,-130,-132,-133,]),')':([31,33,36,47,51,52,53,58,75,79,80,87,101,105,107,112,120,124,126,128,130,131,132,137,145,160,161,162,184,190,191,192,193,194,198,199,221,222,251,252,279,281,283,288,290,294,300,301,302,303,305,306,307,309,310,311,312,320,353,354,355,356,357,358,359,360,361,362,363,370,374,375,376,377,378,379,380,381,382,383,385,386,387,388,391,392,393,394,395,397,399,402,407,408,409,410,412,435,436,437,443,444,445,446,447,448,450,451,452,455,456,457,458,459,460,461,462,463,464,465,466,469,470,471,472,473,474,475,476,489,492,493,496,],[-72,-75,-76,-77,106,-73,-74,119,-79,-63,-78,144,-60,196,-92,202,210,-80,-81,-82,-64,-65,-69,226,234,-61,-62,-66,-212,-159,-160,-161,-162,-163,-93,-94,-70,-71,-67,-68,-172,-72,-75,391,-137,-138,-164,-165,-166,-167,409,410,411,-208,-209,-210,-211,-91,-169,-204,-196,-205,-197,-206,-198,-207,-199,-232,-230,-148,-168,-63,-175,-192,-200,-193,-79,-203,-194,-201,-195,-202,-229,-231,-182,455,456,457,-139,-140,-141,-149,469,470,-213,-214,-60,-153,-152,-179,-144,-142,-145,-150,-151,-178,-173,-69,-81,-183,-184,-185,-188,-190,-191,-189,-186,-187,-143,-146,-147,-170,-171,-215,-216,-217,-218,-174,-66,-181,-180,-176,-177,]),'!':([32,38,62,63,64,65,66,67,68,69,70,71,72,73,74,103,163,164,166,167,168,169,170,171,172,174,175,177,178,180,182,183,185,187,188,189,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,276,277,282,283,284,285,286,287,288,289,291,298,366,367,380,396,398,400,405,406,409,411,413,414,415,416,417,418,419,420,439,440,452,453,454,490,491,494,495,497,498,499,500,501,502,],[59,88,-233,-234,-235,-236,-237,-238,-239,-240,-241,-242,-243,-244,-245,183,183,-107,-110,-111,-112,-113,-114,-115,-116,183,183,183,183,183,183,183,183,183,183,-158,-95,-106,-109,183,183,183,183,183,183,183,-219,-220,-221,-222,-223,-224,-225,-226,-227,-228,-117,183,183,183,183,183,183,183,183,183,183,-136,183,-120,183,183,183,183,183,-121,183,183,183,-118,-119,183,-128,-131,183,-134,-135,-157,-155,183,-154,-156,-122,-124,-123,-125,-126,-127,-129,-130,-132,-133,]),'[':([32,38,62,63,64,65,66,67,68,69,70,71,72,73,74,103,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,180,182,183,184,185,187,188,189,190,191,192,193,194,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,276,277,279,282,283,284,285,286,287,288,289,290,291,292,294,295,296,298,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,395,396,397,398,399,400,402,403,404,405,406,409,410,411,413,414,415,416,417,418,419,420,435,436,437,439,440,441,442,443,444,445,446,447,448,450,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,490,491,492,493,494,495,496,497,498,499,500,501,502,],[60,89,-233,-234,-235,-236,-237,-238,-239,-240,-241,-242,-243,-244,-245,175,175,-107,256,-110,-111,-112,-113,-114,-115,-116,277,175,175,175,175,175,175,175,-212,175,175,175,-158,-159,-160,-161,-162,-163,-95,-106,-109,175,175,175,175,175,175,175,-219,-220,-221,-222,-223,-224,-225,-226,-227,-228,-117,175,175,-172,175,175,175,175,175,175,175,175,256,-136,277,-138,277,256,175,277,-165,277,-167,277,256,-208,-209,-210,-211,256,277,256,277,256,277,256,277,-169,256,277,-205,277,-206,277,-207,277,256,277,256,277,-120,175,277,-148,256,277,256,-168,-175,277,256,277,175,-203,277,-201,277,-202,277,256,277,256,-182,277,256,-139,175,-140,175,-141,175,-149,277,256,-121,175,175,-214,175,-118,-119,175,-128,-131,175,-134,-135,-153,-152,-179,-157,-155,277,256,-144,-142,-145,-150,-151,-178,-173,175,-154,-156,-183,-184,-185,277,256,256,277,277,256,-143,-146,-147,277,256,-170,-171,-215,-216,-217,-218,-174,277,256,277,256,-181,-122,-124,-180,-176,-123,-125,-177,-126,-127,-129,-130,-132,-133,]),'=':([32,38,165,173,184,190,191,192,193,194,274,279,290,294,299,300,301,302,303,309,310,311,312,315,353,354,355,356,357,358,359,360,361,362,363,370,374,376,377,378,379,381,382,383,385,386,387,388,391,395,397,399,402,409,410,435,436,437,443,444,445,446,447,448,450,455,456,457,464,465,466,469,470,471,472,473,474,475,481,482,489,492,493,496,],[61,90,263,287,-212,-159,-160,-161,-162,-163,367,-172,-137,-138,406,-164,-165,-166,-167,-208,-209,-210,-211,415,-169,-204,-196,-205,-197,-206,-198,-207,-199,-232,-230,-148,-168,-175,-192,-200,-193,-203,-194,-201,-195,-202,-229,-231,-182,-139,-140,-141,-149,-213,-214,-153,-152,-179,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,-143,-146,-147,-170,-171,-215,-216,-217,-218,-174,287,263,-181,-180,-176,-177,]),'PLUS':([32,38,165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[62,62,62,62,-212,-159,-160,-161,-162,-163,-172,62,62,-138,62,62,62,-165,62,62,62,62,-208,-209,-210,-211,62,62,62,62,62,62,62,62,-169,62,62,62,62,62,62,-207,62,62,62,62,62,62,-148,62,62,62,-168,-175,62,62,62,-203,62,62,62,62,62,62,62,62,-182,62,62,-139,-140,-141,-149,62,62,-213,-214,-153,-152,-179,62,62,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,62,62,62,62,62,62,-143,-146,-147,62,62,-170,-171,-215,-216,-217,-218,-174,62,62,62,62,-181,-180,-176,-177,]),'MINUS':([32,38,62,63,64,65,66,67,68,69,70,71,72,73,74,103,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,180,182,183,184,185,187,188,189,190,191,192,193,194,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,276,277,279,282,283,284,285,286,287,288,289,290,291,292,294,295,296,298,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,395,396,397,398,399,400,402,403,404,405,406,409,410,411,413,414,415,416,417,418,419,420,435,436,437,439,440,441,442,443,444,445,446,447,448,450,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,490,491,492,493,494,495,496,497,498,499,500,501,502,],[63,63,-233,-234,-235,-236,-237,-238,-239,-240,-241,-242,-243,-244,-245,182,182,-107,63,-110,-111,-112,-113,-114,-115,-116,63,182,182,182,182,182,182,182,-212,182,182,182,-158,-159,-160,-161,-162,-163,-95,-106,-109,182,182,182,182,182,182,182,-219,-220,-221,-222,-223,-224,-225,-226,-227,-228,-117,182,182,-172,182,182,182,182,182,182,182,182,63,-136,63,-138,63,63,182,63,-165,63,63,63,63,-208,-209,-210,-211,63,63,63,63,63,63,63,63,-169,63,63,63,63,63,63,-207,63,63,63,63,63,-120,182,63,-148,63,63,63,-168,-175,63,63,63,182,-203,63,63,63,63,63,63,63,63,-182,63,63,-139,182,-140,182,-141,182,-149,63,63,-121,182,182,-214,182,-118,-119,182,-128,-131,182,-134,-135,-153,-152,-179,-157,-155,63,63,-144,-142,-145,-150,-151,-178,-173,182,-154,-156,-183,-184,-185,63,63,63,63,63,63,-143,-146,-147,63,63,-170,-171,-215,-216,-217,-218,-174,63,63,63,63,-181,-122,-124,-180,-176,-123,-125,-177,-126,-127,-129,-130,-132,-133,]),'DIVIDE':([32,38,165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[64,64,64,64,-212,-159,-160,-161,-162,-163,-172,64,64,-138,64,64,64,-165,64,64,64,64,-208,-209,-210,-211,64,64,64,64,64,64,64,64,-169,64,64,64,64,64,64,-207,64,64,64,64,64,64,-148,64,64,64,-168,-175,64,64,64,-203,64,64,64,64,64,64,64,64,-182,64,64,-139,-140,-141,-149,64,64,-213,-214,-153,-152,-179,64,64,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,64,64,64,64,64,64,-143,-146,-147,64,64,-170,-171,-215,-216,-217,-218,-174,64,64,64,64,-181,-180,-176,-177,]),'MOD':([32,38,165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[65,65,65,65,-212,-159,-160,-161,-162,-163,-172,65,65,-138,65,65,65,-165,65,65,65,65,-208,-209,-210,-211,65,65,65,65,65,65,65,65,-169,65,65,65,65,65,65,-207,65,65,65,65,65,65,-148,65,65,65,-168,-175,65,65,65,-203,65,65,65,65,65,65,65,65,-182,65,65,-139,-140,-141,-149,65,65,-213,-214,-153,-152,-179,65,65,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,65,65,65,65,65,65,-143,-146,-147,65,65,-170,-171,-215,-216,-217,-218,-174,65,65,65,65,-181,-180,-176,-177,]),'AND':([32,38,62,63,64,65,66,67,68,69,70,71,72,73,74,103,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,180,182,183,184,185,187,188,189,190,191,192,193,194,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,276,277,279,282,283,284,285,286,287,288,289,290,291,292,294,295,296,298,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,395,396,397,398,399,400,402,403,404,405,406,409,410,411,413,414,415,416,417,418,419,420,435,436,437,439,440,441,442,443,444,445,446,447,448,450,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,490,491,492,493,494,495,496,497,498,499,500,501,502,],[66,66,-233,-234,-235,-236,-237,-238,-239,-240,-241,-242,-243,-244,-245,178,178,-107,66,-110,-111,-112,-113,-114,-115,-116,66,178,178,178,178,178,178,178,-212,178,178,178,-158,-159,-160,-161,-162,-163,-95,-106,-109,178,178,178,178,178,178,178,-219,-220,-221,-222,-223,-224,-225,-226,-227,-228,-117,178,178,-172,178,178,178,178,178,178,178,178,66,-136,66,-138,66,66,178,66,-165,66,-167,66,66,-208,-209,-210,-211,66,66,66,66,66,66,66,66,-169,66,66,66,66,66,66,-207,66,66,66,66,66,-120,178,66,-148,66,66,66,-168,-175,66,66,66,178,-203,66,66,66,66,66,66,66,66,-182,66,66,-139,178,-140,178,-141,178,-149,66,66,-121,178,178,-214,178,-118,-119,178,-128,-131,178,-134,-135,-153,-152,-179,-157,-155,66,66,-144,-142,-145,-150,-151,-178,-173,178,-154,-156,-183,-184,-185,66,66,66,66,66,66,-143,-146,-147,66,66,-170,-171,-215,-216,-217,-218,-174,66,66,66,66,-181,-122,-124,-180,-176,-123,-125,-177,-126,-127,-129,-130,-132,-133,]),'OR':([32,38,165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[67,67,67,67,-212,-159,-160,-161,-162,-163,-172,67,67,-138,67,67,67,-165,67,-167,67,67,-208,-209,-210,-211,67,67,67,67,67,67,67,67,-169,67,67,67,67,67,67,-207,67,67,67,67,67,67,-148,67,67,67,-168,-175,67,67,67,-203,67,67,67,67,67,67,67,67,-182,67,67,-139,-140,-141,-149,67,67,-213,-214,-153,-152,-179,67,67,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,67,67,67,67,67,67,-143,-146,-147,67,67,-170,-171,-215,-216,-217,-218,-174,67,67,67,67,-181,-180,-176,-177,]),'XOR':([32,38,165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[68,68,68,68,-212,-159,-160,-161,-162,-163,-172,68,68,-138,68,68,68,-165,68,-167,68,68,-208,-209,-210,-211,68,68,68,68,68,68,68,68,-169,68,68,68,68,68,68,-207,68,68,68,68,68,68,-148,68,68,68,-168,-175,68,68,68,-203,68,68,68,68,68,68,68,68,-182,68,68,-139,-140,-141,-149,68,68,-213,-214,-153,-152,-179,68,68,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,68,68,68,68,68,68,-143,-146,-147,68,68,-170,-171,-215,-216,-217,-218,-174,68,68,68,68,-181,-180,-176,-177,]),'LSHIFT':([32,38,165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[69,69,69,69,-212,-159,-160,-161,-162,-163,-172,69,69,-138,69,69,69,-165,69,69,69,69,-208,-209,-210,-211,69,69,69,69,69,69,69,69,-169,69,69,69,69,69,69,-207,69,69,69,69,69,69,-148,69,69,69,-168,-175,69,69,69,-203,69,69,69,69,69,69,69,69,-182,69,69,-139,-140,-141,-149,69,69,-213,-214,-153,-152,-179,69,69,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,69,69,69,69,69,69,-143,-146,-147,69,69,-170,-171,-215,-216,-217,-218,-174,69,69,69,69,-181,-180,-176,-177,]),'RSHIFT':([32,38,165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[70,70,70,70,-212,-159,-160,-161,-162,-163,-172,70,70,-138,70,70,70,-165,70,70,70,70,-208,-209,-210,-211,70,70,70,70,70,70,70,70,-169,70,70,70,70,70,70,-207,70,70,70,70,70,70,-148,70,70,70,-168,-175,70,70,70,-203,70,70,70,70,70,70,70,70,-182,70,70,-139,-140,-141,-149,70,70,-213,-214,-153,-152,-179,70,70,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,70,70,70,70,70,70,-143,-146,-147,70,70,-170,-171,-215,-216,-217,-218,-174,70,70,70,70,-181,-180,-176,-177,]),'LE':([32,38,165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[71,71,71,71,-212,-159,-160,-161,-162,-163,-172,71,71,-138,71,71,71,-165,71,-167,71,71,-208,-209,-210,-211,71,71,71,71,71,71,71,71,-169,71,71,-205,71,-206,71,-207,71,71,71,71,71,71,-148,71,71,71,-168,-175,71,71,71,-203,71,-201,71,-202,71,71,71,71,-182,71,71,-139,-140,-141,-149,71,71,-213,-214,-153,-152,-179,71,71,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,71,71,71,71,71,71,-143,-146,-147,71,71,-170,-171,-215,-216,-217,-218,-174,71,71,71,71,-181,-180,-176,-177,]),'GE':([32,38,165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[72,72,72,72,-212,-159,-160,-161,-162,-163,-172,72,72,-138,72,72,72,-165,72,-167,72,72,-208,-209,-210,-211,72,72,72,72,72,72,72,72,-169,72,72,-205,72,-206,72,-207,72,72,72,72,72,72,-148,72,72,72,-168,-175,72,72,72,-203,72,-201,72,-202,72,72,72,72,-182,72,72,-139,-140,-141,-149,72,72,-213,-214,-153,-152,-179,72,72,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,72,72,72,72,72,72,-143,-146,-147,72,72,-170,-171,-215,-216,-217,-218,-174,72,72,72,72,-181,-180,-176,-177,]),'EE':([32,38,165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[73,73,73,73,-212,-159,-160,-161,-162,-163,-172,73,73,-138,73,73,73,-165,73,-167,73,73,-208,-209,-210,-211,73,73,73,73,73,73,73,73,-169,73,73,-205,73,-206,73,-207,73,73,73,73,73,73,-148,73,73,73,-168,-175,73,73,73,-203,73,-201,73,-202,73,73,73,73,-182,73,73,-139,-140,-141,-149,73,73,-213,-214,-153,-152,-179,73,73,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,73,73,73,73,73,73,-143,-146,-147,73,73,-170,-171,-215,-216,-217,-218,-174,73,73,73,73,-181,-180,-176,-177,]),'NE':([32,38,165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[74,74,74,74,-212,-159,-160,-161,-162,-163,-172,74,74,-138,74,74,74,-165,74,-167,74,74,-208,-209,-210,-211,74,74,74,74,74,74,74,74,-169,74,74,-205,74,-206,74,-207,74,74,74,74,74,74,-148,74,74,74,-168,-175,74,74,74,-203,74,-201,74,-202,74,74,74,74,-182,74,74,-139,-140,-141,-149,74,74,-213,-214,-153,-152,-179,74,74,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,74,74,74,74,74,74,-143,-146,-147,74,74,-170,-171,-215,-216,-217,-218,-174,74,74,74,74,-181,-180,-176,-177,]),']':([60,89,175,184,190,191,192,193,194,279,290,294,295,296,297,300,301,302,303,309,310,311,312,351,352,353,354,355,356,357,358,359,360,361,362,363,370,372,373,374,376,377,378,379,381,382,383,385,386,387,388,391,395,397,399,402,409,410,435,436,437,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,469,470,471,472,473,474,475,489,492,493,496,],[121,146,294,-212,-159,-160,-161,-162,-163,-172,-137,-138,395,397,399,-164,-165,-166,-167,-208,-209,-210,-211,435,436,-169,-204,-196,-205,-197,-206,-198,-207,-199,-232,-230,-148,446,447,-168,-175,-192,-200,-193,-203,-194,-201,-195,-202,-229,-231,-182,-139,-140,-141,-149,-213,-214,-153,-152,-179,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,-188,-190,-191,-189,-186,-187,-143,-146,-147,-170,-171,-215,-216,-217,-218,-174,-181,-180,-176,-177,]),'SIZEOF':([62,63,64,65,66,67,68,69,70,71,72,73,74,103,163,164,166,167,168,169,170,171,172,174,175,177,178,180,182,183,185,187,188,189,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,276,277,282,283,284,285,286,287,288,289,291,298,366,367,380,396,398,400,405,406,409,411,413,414,415,416,417,418,419,420,439,440,452,453,454,490,491,494,495,497,498,499,500,501,502,],[-233,-234,-235,-236,-237,-238,-239,-240,-241,-242,-243,-244,-245,179,179,-107,-110,-111,-112,-113,-114,-115,-116,179,179,179,179,179,179,179,179,179,179,-158,-95,-106,-109,179,179,179,179,179,179,179,-219,-220,-221,-222,-223,-224,-225,-226,-227,-228,-117,179,179,179,179,179,179,179,179,179,179,-136,179,-120,179,179,179,179,179,-121,179,179,179,-118,-119,179,-128,-131,179,-134,-135,-157,-155,179,-154,-156,-122,-124,-123,-125,-126,-127,-129,-130,-132,-133,]),'INT':([62,63,64,65,66,67,68,69,70,71,72,73,74,103,163,164,166,167,168,169,170,171,172,174,175,177,178,180,182,183,185,187,188,189,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,276,277,282,283,284,285,286,287,288,289,291,298,366,367,380,396,398,400,405,406,409,411,413,414,415,416,417,418,419,420,439,440,452,453,454,490,491,494,495,497,498,499,500,501,502,],[-233,-234,-235,-236,-237,-238,-239,-240,-241,-242,-243,-244,-245,190,190,-107,-110,-111,-112,-113,-114,-115,-116,190,190,190,190,190,190,190,190,190,190,-158,-95,-106,-109,190,190,190,190,190,190,190,-219,-220,-221,-222,-223,-224,-225,-226,-227,-228,-117,190,190,190,190,190,190,190,190,190,190,-136,190,-120,190,190,190,190,190,-121,190,190,190,-118,-119,190,-128,-131,190,-134,-135,-157,-155,190,-154,-156,-122,-124,-123,-125,-126,-127,-129,-130,-132,-133,]),'FLOAT':([62,63,64,65,66,67,68,69,70,71,72,73,74,103,163,164,166,167,168,169,170,171,172,174,175,177,178,180,182,183,185,187,188,189,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,276,277,282,283,284,285,286,287,288,289,291,298,366,367,380,396,398,400,405,406,409,411,413,414,415,416,417,418,419,420,439,440,452,453,454,490,491,494,495,497,498,499,500,501,502,],[-233,-234,-235,-236,-237,-238,-239,-240,-241,-242,-243,-244,-245,191,191,-107,-110,-111,-112,-113,-114,-115,-116,191,191,191,191,191,191,191,191,191,191,-158,-95,-106,-109,191,191,191,191,191,191,191,-219,-220,-221,-222,-223,-224,-225,-226,-227,-228,-117,191,191,191,191,191,191,191,191,191,191,-136,191,-120,191,191,191,191,191,-121,191,191,191,-118,-119,191,-128,-131,191,-134,-135,-157,-155,191,-154,-156,-122,-124,-123,-125,-126,-127,-129,-130,-132,-133,]),'STR':([62,63,64,65,66,67,68,69,70,71,72,73,74,103,163,164,166,167,168,169,170,171,172,174,175,177,178,180,182,183,185,187,188,189,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,276,277,282,283,284,285,286,287,288,289,291,298,366,367,380,396,398,400,405,406,409,411,413,414,415,416,417,418,419,420,439,440,452,453,454,490,491,494,495,497,498,499,500,501,502,],[-233,-234,-235,-236,-237,-238,-239,-240,-241,-242,-243,-244,-245,192,192,-107,-110,-111,-112,-113,-114,-115,-116,192,192,192,192,192,192,192,192,192,192,-158,-95,-106,-109,192,192,192,192,192,192,192,-219,-220,-221,-222,-223,-224,-225,-226,-227,-228,-117,192,192,192,192,192,192,192,192,192,192,-136,192,-120,192,192,192,192,192,-121,192,192,192,-118,-119,192,-128,-131,192,-134,-135,-157,-155,192,-154,-156,-122,-124,-123,-125,-126,-127,-129,-130,-132,-133,]),'BOOL':([62,63,64,65,66,67,68,69,70,71,72,73,74,103,163,164,166,167,168,169,170,171,172,174,175,177,178,180,182,183,185,187,188,189,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,276,277,282,283,284,285,286,287,288,289,291,298,366,367,380,396,398,400,405,406,409,411,413,414,415,416,417,418,419,420,439,440,452,453,454,490,491,494,495,497,498,499,500,501,502,],[-233,-234,-235,-236,-237,-238,-239,-240,-241,-242,-243,-244,-245,193,193,-107,-110,-111,-112,-113,-114,-115,-116,193,193,193,193,193,193,193,193,193,193,-158,-95,-106,-109,193,193,193,193,193,193,193,-219,-220,-221,-222,-223,-224,-225,-226,-227,-228,-117,193,193,193,193,193,193,193,193,193,193,-136,193,-120,193,193,193,193,193,-121,193,193,193,-118,-119,193,-128,-131,193,-134,-135,-157,-155,193,-154,-156,-122,-124,-123,-125,-126,-127,-129,-130,-132,-133,]),'CHAR':([62,63,64,65,66,67,68,69,70,71,72,73,74,103,163,164,166,167,168,169,170,171,172,174,175,177,178,180,182,183,185,187,188,189,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,275,276,277,282,283,284,285,286,287,288,289,291,298,366,367,380,396,398,400,405,406,409,411,413,414,415,416,417,418,419,420,439,440,452,453,454,490,491,494,495,497,498,499,500,501,502,],[-233,-234,-235,-236,-237,-238,-239,-240,-241,-242,-243,-244,-245,194,194,-107,-110,-111,-112,-113,-114,-115,-116,194,194,194,194,194,194,194,194,194,194,-158,-95,-106,-109,194,194,194,194,194,194,194,-219,-220,-221,-222,-223,-224,-225,-226,-227,-228,-117,194,194,194,194,194,194,194,194,194,194,-136,194,-120,194,194,194,194,194,-121,194,194,194,-118,-119,194,-128,-131,194,-134,-135,-157,-155,194,-154,-156,-122,-124,-123,-125,-126,-127,-129,-130,-132,-133,]),'}':([100,103,159,163,164,166,167,168,169,170,171,172,184,189,190,191,192,193,194,247,253,254,255,275,276,279,290,291,294,298,300,301,302,303,309,310,311,312,353,354,355,356,357,358,359,360,361,362,363,366,368,369,370,371,374,376,377,378,379,381,382,383,385,386,387,388,391,395,397,399,401,402,403,404,405,409,410,413,414,416,417,418,419,420,431,432,435,436,437,439,440,443,444,445,446,447,448,450,453,454,455,456,457,458,459,460,461,462,463,464,465,466,469,470,471,472,473,474,475,481,482,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,],[-101,-108,246,253,-107,-110,-111,-112,-113,-114,-115,-116,-212,-158,-159,-160,-161,-162,-163,-100,-95,-106,-109,-117,370,-172,-137,-136,-138,402,-164,-165,-166,-167,-208,-209,-210,-211,-169,-204,-196,-205,-197,-206,-198,-207,-199,-232,-230,-120,443,444,-148,445,-168,-175,-192,-200,-193,-203,-194,-201,-195,-202,-229,-231,-182,-139,-140,-141,464,-149,465,466,-121,-213,-214,-118,-119,-128,-131,370,-134,-135,-102,-103,-153,-152,-179,-157,-155,-144,-142,-145,-150,-151,-178,-173,-154,-156,-183,-184,-185,-188,-190,-191,-189,-186,-187,-143,-146,-147,-170,-171,-215,-216,-217,-218,-174,443,445,-104,-105,-181,-122,-124,-180,-176,-123,-125,-177,-126,-127,-129,-130,-132,-133,]),'ACCMOD':([100,159,247,431,432,487,488,],[-101,250,-100,-102,-103,-104,-105,]),'RETURN':([103,163,164,166,167,168,169,170,171,172,189,253,254,255,275,291,366,405,413,414,416,417,418,419,420,439,440,453,454,490,491,494,495,497,498,499,500,501,502,],[185,185,-107,-110,-111,-112,-113,-114,-115,-116,-158,-95,-106,-109,-117,-136,-120,-121,-118,-119,-128,-131,185,-134,-135,-157,-155,-154,-156,-122,-124,-123,-125,-126,-127,-129,-130,-132,-133,]),'VAR':([103,163,164,166,167,168,169,170,171,172,189,253,254,255,275,291,366,405,413,414,416,417,418,419,420,439,440,453,454,490,491,494,495,497,498,499,500,501,502,],[186,186,-107,-110,-111,-112,-113,-114,-115,-116,-158,-95,-106,-109,-117,-136,-120,-121,-118,-119,-128,-131,186,-134,-135,-157,-155,-154,-156,-122,-124,-123,-125,-126,-127,-129,-130,-132,-133,]),'IF':([103,163,164,166,167,168,169,170,171,172,189,253,254,255,275,291,366,405,413,414,416,417,418,419,420,439,440,453,454,479,480,490,491,494,495,497,498,499,500,501,502,],[187,187,-107,-110,-111,-112,-113,-114,-115,-116,-158,-95,-106,-109,-117,-136,-120,-121,-118,-119,-128,-131,187,-134,-135,-157,-155,-154,-156,187,187,-122,-124,-123,-125,-126,-127,-129,-130,-132,-133,]),'WHILE':([103,163,164,166,167,168,169,170,171,172,189,253,254,255,275,291,366,405,413,414,416,417,418,419,420,439,440,453,454,490,491,494,495,497,498,499,500,501,502,],[188,188,-107,-110,-111,-112,-113,-114,-115,-116,-158,-95,-106,-109,-117,-136,-120,-121,-118,-119,-128,-131,188,-134,-135,-157,-155,-154,-156,-122,-124,-123,-125,-126,-127,-129,-130,-132,-133,]),'.':([165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[257,278,-212,-159,-160,-161,-162,-163,-172,257,278,-138,278,257,278,257,278,257,278,257,278,257,278,257,257,278,257,278,257,278,257,278,-169,257,278,257,278,257,278,257,278,257,278,257,278,278,-148,257,278,257,-168,-175,278,257,278,257,278,257,278,257,278,257,278,257,-182,278,257,-139,-140,-141,-149,278,257,-213,-214,-153,-152,-179,278,257,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,278,257,257,278,278,257,-143,-146,-147,278,257,-170,-171,278,257,278,257,-174,278,257,278,257,-181,-180,-176,-177,]),'PLUSEQ':([165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[264,264,-212,-159,-160,-161,-162,-163,-172,264,264,-138,264,264,264,-165,264,-167,264,264,-208,-209,-210,-211,264,264,264,264,264,264,264,264,-169,264,264,-205,264,-206,264,-207,264,264,264,264,264,264,-148,264,264,264,-168,-175,264,264,264,-203,264,-201,264,-202,264,264,264,264,-182,264,264,-139,-140,-141,-149,264,264,-213,-214,-153,-152,-179,264,264,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,264,264,264,264,264,264,-143,-146,-147,264,264,-170,-171,-215,-216,-217,-218,-174,264,264,264,264,-181,-180,-176,-177,]),'MINUSEQ':([165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[265,265,-212,-159,-160,-161,-162,-163,-172,265,265,-138,265,265,265,-165,265,-167,265,265,-208,-209,-210,-211,265,265,265,265,265,265,265,265,-169,265,265,-205,265,-206,265,-207,265,265,265,265,265,265,-148,265,265,265,-168,-175,265,265,265,-203,265,-201,265,-202,265,265,265,265,-182,265,265,-139,-140,-141,-149,265,265,-213,-214,-153,-152,-179,265,265,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,265,265,265,265,265,265,-143,-146,-147,265,265,-170,-171,-215,-216,-217,-218,-174,265,265,265,265,-181,-180,-176,-177,]),'TIMESEQ':([165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[266,266,-212,-159,-160,-161,-162,-163,-172,266,266,-138,266,266,266,-165,266,-167,266,266,-208,-209,-210,-211,266,266,266,266,266,266,266,266,-169,266,266,-205,266,-206,266,-207,266,266,266,266,266,266,-148,266,266,266,-168,-175,266,266,266,-203,266,-201,266,-202,266,266,266,266,-182,266,266,-139,-140,-141,-149,266,266,-213,-214,-153,-152,-179,266,266,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,266,266,266,266,266,266,-143,-146,-147,266,266,-170,-171,-215,-216,-217,-218,-174,266,266,266,266,-181,-180,-176,-177,]),'DIVIDEEQ':([165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[267,267,-212,-159,-160,-161,-162,-163,-172,267,267,-138,267,267,267,-165,267,-167,267,267,-208,-209,-210,-211,267,267,267,267,267,267,267,267,-169,267,267,-205,267,-206,267,-207,267,267,267,267,267,267,-148,267,267,267,-168,-175,267,267,267,-203,267,-201,267,-202,267,267,267,267,-182,267,267,-139,-140,-141,-149,267,267,-213,-214,-153,-152,-179,267,267,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,267,267,267,267,267,267,-143,-146,-147,267,267,-170,-171,-215,-216,-217,-218,-174,267,267,267,267,-181,-180,-176,-177,]),'MODEQ':([165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[268,268,-212,-159,-160,-161,-162,-163,-172,268,268,-138,268,268,268,-165,268,-167,268,268,-208,-209,-210,-211,268,268,268,268,268,268,268,268,-169,268,268,-205,268,-206,268,-207,268,268,268,268,268,268,-148,268,268,268,-168,-175,268,268,268,-203,268,-201,268,-202,268,268,268,268,-182,268,268,-139,-140,-141,-149,268,268,-213,-214,-153,-152,-179,268,268,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,268,268,268,268,268,268,-143,-146,-147,268,268,-170,-171,-215,-216,-217,-218,-174,268,268,268,268,-181,-180,-176,-177,]),'ANDEQ':([165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[269,269,-212,-159,-160,-161,-162,-163,-172,269,269,-138,269,269,269,-165,269,-167,269,269,-208,-209,-210,-211,269,269,269,269,269,269,269,269,-169,269,269,-205,269,-206,269,-207,269,269,269,269,269,269,-148,269,269,269,-168,-175,269,269,269,-203,269,-201,269,-202,269,269,269,269,-182,269,269,-139,-140,-141,-149,269,269,-213,-214,-153,-152,-179,269,269,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,269,269,269,269,269,269,-143,-146,-147,269,269,-170,-171,-215,-216,-217,-218,-174,269,269,269,269,-181,-180,-176,-177,]),'OREQ':([165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[270,270,-212,-159,-160,-161,-162,-163,-172,270,270,-138,270,270,270,-165,270,-167,270,270,-208,-209,-210,-211,270,270,270,270,270,270,270,270,-169,270,270,-205,270,-206,270,-207,270,270,270,270,270,270,-148,270,270,270,-168,-175,270,270,270,-203,270,-201,270,-202,270,270,270,270,-182,270,270,-139,-140,-141,-149,270,270,-213,-214,-153,-152,-179,270,270,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,270,270,270,270,270,270,-143,-146,-147,270,270,-170,-171,-215,-216,-217,-218,-174,270,270,270,270,-181,-180,-176,-177,]),'XOREQ':([165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[271,271,-212,-159,-160,-161,-162,-163,-172,271,271,-138,271,271,271,-165,271,-167,271,271,-208,-209,-210,-211,271,271,271,271,271,271,271,271,-169,271,271,-205,271,-206,271,-207,271,271,271,271,271,271,-148,271,271,271,-168,-175,271,271,271,-203,271,-201,271,-202,271,271,271,271,-182,271,271,-139,-140,-141,-149,271,271,-213,-214,-153,-152,-179,271,271,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,271,271,271,271,271,271,-143,-146,-147,271,271,-170,-171,-215,-216,-217,-218,-174,271,271,271,271,-181,-180,-176,-177,]),'LSHIFTEQ':([165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[272,272,-212,-159,-160,-161,-162,-163,-172,272,272,-138,272,272,272,-165,272,-167,272,272,-208,-209,-210,-211,272,272,272,272,272,272,272,272,-169,272,272,-205,272,-206,272,-207,272,272,272,272,272,272,-148,272,272,272,-168,-175,272,272,272,-203,272,-201,272,-202,272,272,272,272,-182,272,272,-139,-140,-141,-149,272,272,-213,-214,-153,-152,-179,272,272,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,272,272,272,272,272,272,-143,-146,-147,272,272,-170,-171,-215,-216,-217,-218,-174,272,272,272,272,-181,-180,-176,-177,]),'RSHIFTEQ':([165,173,184,190,191,192,193,194,279,290,292,294,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,368,370,371,372,373,374,376,377,378,379,381,382,383,385,386,387,388,389,390,391,392,393,395,397,399,402,403,404,409,410,435,436,437,441,442,443,444,445,446,447,448,450,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,481,482,489,492,493,496,],[273,273,-212,-159,-160,-161,-162,-163,-172,273,273,-138,273,273,273,-165,273,-167,273,273,-208,-209,-210,-211,273,273,273,273,273,273,273,273,-169,273,273,-205,273,-206,273,-207,273,273,273,273,273,273,-148,273,273,273,-168,-175,273,273,273,-203,273,-201,273,-202,273,273,273,273,-182,273,273,-139,-140,-141,-149,273,273,-213,-214,-153,-152,-179,273,273,-144,-142,-145,-150,-151,-178,-173,-183,-184,-185,273,273,273,273,273,273,-143,-146,-147,273,273,-170,-171,-215,-216,-217,-218,-174,273,273,273,273,-181,-180,-176,-177,]),'ELSE':([189,253,416,417,],[-158,-95,479,480,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,],[1,]),'package-declaration':([0,],[2,]),'import-declarations':([2,],[4,]),'import-declaration':([2,4,],[5,10,]),'package-complicated-name':([3,6,9,20,22,25,34,51,103,112,125,127,129,137,159,163,174,175,177,178,180,182,183,185,187,188,197,250,256,258,259,260,261,262,263,276,277,282,283,284,285,286,287,288,289,298,304,367,380,396,398,400,406,409,411,415,418,452,],[8,12,24,24,24,24,24,24,181,24,24,24,24,24,24,181,181,181,181,181,181,181,181,181,181,181,24,24,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,24,181,181,181,181,181,181,181,181,181,181,181,]),'main-code':([4,],[9,]),'main':([9,],[17,]),'complicated-type':([9,20,22,25,34,51,103,112,125,127,129,137,159,163,174,175,177,178,180,182,183,185,187,188,197,250,256,258,259,260,261,262,263,276,277,282,283,284,285,286,287,288,289,298,304,367,380,396,398,400,406,409,411,415,418,452,],[19,40,43,47,78,109,176,109,216,218,219,109,249,176,293,293,293,293,307,293,293,293,293,293,109,350,293,293,293,293,293,293,293,293,293,293,293,384,293,293,293,293,293,293,408,293,293,293,293,293,293,293,293,293,176,293,]),'template-declaration':([18,30,37,39,41,42,45,48,54,55,56,57,61,77,79,83,84,85,86,90,91,92,101,108,121,146,173,202,210,215,217,220,226,234,248,292,295,300,302,305,309,311,314,317,319,349,352,353,355,357,359,361,363,365,368,372,374,375,377,379,382,385,387,389,392,403,407,412,441,458,461,462,467,471,473,477,481,],[31,50,82,31,94,31,99,31,111,114,116,118,123,31,132,136,139,141,143,148,150,152,162,31,212,236,281,323,329,31,31,31,335,341,31,281,281,281,281,281,281,281,281,281,281,31,281,438,281,281,281,281,281,281,281,281,449,451,281,281,281,281,281,281,281,281,31,476,281,281,281,281,281,281,281,281,281,]),'complicated-pointer-level':([18,31,39,42,48,77,79,101,108,132,162,173,215,217,220,248,281,292,295,300,302,305,309,311,314,317,319,349,352,355,357,359,361,363,365,368,372,375,377,379,382,385,387,389,392,403,407,412,441,451,458,461,462,467,471,473,476,477,481,],[36,53,36,36,36,36,131,161,36,222,252,36,36,36,36,36,53,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,131,36,36,36,36,36,36,36,36,36,161,36,222,36,36,36,36,36,36,252,36,36,]),'function-arguments':([30,37,41,50,54,55,56,57,61,82,83,84,85,86,90,91,92,94,95,96,111,114,116,118,119,121,123,136,139,141,143,144,146,148,150,152,202,210,212,226,234,236,323,329,335,341,],[49,81,93,104,110,113,115,117,122,134,135,138,140,142,147,149,151,154,155,156,201,204,206,208,209,211,214,225,228,230,232,233,235,238,240,242,322,328,331,334,340,343,422,424,427,429,]),'binary-operator':([32,38,165,173,290,292,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,354,355,356,357,358,359,360,361,362,363,364,365,368,371,372,373,377,378,379,381,382,383,385,386,387,388,389,390,392,393,403,404,441,442,458,459,460,461,462,463,467,468,471,472,473,474,477,478,481,482,],[54,83,258,282,258,282,282,258,282,258,282,258,282,258,282,258,282,258,258,282,258,282,258,282,258,282,258,282,258,282,258,282,258,282,258,282,258,282,282,258,282,258,282,258,282,258,282,258,282,258,282,258,282,258,282,258,282,258,282,258,282,258,258,282,282,258,282,258,282,258,282,258,282,258,282,258,]),'template-declaration-body':([34,284,],[76,76,]),'struct-body':([45,97,99,],[98,157,158,]),'function-body':([49,81,93,103,104,110,113,115,117,122,134,135,138,140,142,147,149,151,154,163,174,201,204,206,208,209,211,214,225,228,230,232,233,235,238,240,242,316,317,318,319,322,328,331,334,340,343,418,422,424,427,429,479,480,],[102,133,153,189,195,200,203,205,207,213,223,224,227,229,231,237,239,241,243,189,189,321,324,325,326,327,330,332,333,336,337,338,339,342,344,345,346,189,189,189,189,421,423,425,426,428,430,189,483,484,485,486,189,189,]),'function-arguments-body':([51,112,137,],[105,105,105,]),'function-argument':([51,112,137,197,],[107,107,107,320,]),'struct-fields':([100,],[159,]),'expression-lines':([103,418,],[163,163,]),'expression-line':([103,163,418,],[164,254,164,]),'complicated-expression':([103,163,174,175,177,178,180,182,183,185,187,188,256,258,259,260,261,262,263,276,277,282,283,284,285,286,287,288,289,298,367,380,396,398,400,406,409,411,415,418,452,],[165,165,290,296,301,303,306,310,312,313,316,318,351,354,356,358,360,362,364,371,373,378,381,383,386,388,390,393,290,404,442,301,459,460,463,468,472,474,478,482,386,]),'return-statement':([103,163,418,],[166,166,166,]),'variable-declaration':([103,163,418,],[167,167,167,]),'if-statement':([103,163,418,479,480,],[168,168,168,500,502,]),'while-statement':([103,163,418,],[169,169,169,]),'unsafe-area':([103,163,418,],[170,170,170,]),'visibility-area':([103,163,174,316,317,318,319,418,479,480,],[171,171,291,416,417,419,420,171,499,501,]),'set-statement':([103,163,418,],[172,172,172,]),'constant-expression':([103,163,174,175,177,178,180,182,183,185,187,188,256,258,259,260,261,262,263,276,277,282,283,284,285,286,287,288,289,298,367,380,396,398,400,406,409,411,415,418,452,],[184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,]),'struct-field':([159,],[247,]),'sub-equal-operator':([165,173,290,292,295,296,300,301,302,303,305,306,309,310,311,312,313,314,316,317,318,319,351,352,354,355,356,357,358,359,360,361,362,363,364,365,368,371,372,373,377,378,379,381,382,383,385,386,387,388,389,390,392,393,403,404,441,442,458,459,460,461,462,463,467,468,471,472,473,474,477,478,481,482,],[262,286,262,286,286,262,286,262,286,262,286,262,286,262,286,262,262,286,262,286,262,286,262,286,262,286,262,286,262,286,262,286,262,286,262,286,286,262,286,262,286,262,286,262,286,262,286,262,286,262,286,262,286,262,286,262,286,262,286,262,262,286,286,262,286,262,286,262,286,262,286,262,286,262,]),'invoke-arguments':([173,281,292,295,300,302,305,309,311,314,317,319,352,353,355,357,359,361,363,365,368,372,374,375,377,379,382,385,387,389,392,403,412,438,441,449,451,458,461,462,467,471,473,476,477,481,],[279,376,279,279,279,279,279,279,279,279,279,279,279,437,279,279,279,279,279,279,279,279,448,450,279,279,279,279,279,279,279,279,475,489,279,492,493,279,279,279,279,279,279,496,279,279,]),'invoke-arguments-list':([175,276,288,298,418,],[297,369,394,401,369,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> package-declaration import-declarations main-code','code',3,'p_code','parser3.py',54),
  ('package-declaration -> PACKAGE ID ;','package-declaration',3,'p_package_declaration','parser3.py',59),
  ('package-declaration -> PACKAGE package-complicated-name ;','package-declaration',3,'p_package_declaration','parser3.py',60),
  ('package-complicated-name -> package-complicated-name : ID','package-complicated-name',3,'p_package_complicated_name1','parser3.py',74),
  ('package-complicated-name -> ID : ID','package-complicated-name',3,'p_package_complicated_name1','parser3.py',75),
  ('package-complicated-name -> <empty>','package-complicated-name',0,'p_package_complicated_name2','parser3.py',84),
  ('import-declarations -> import-declarations import-declaration','import-declarations',2,'p_import_declarations','parser3.py',90),
  ('import-declarations -> import-declaration','import-declarations',1,'p_import_declarations','parser3.py',91),
  ('import-declarations -> <empty>','import-declarations',0,'p_import_declarations','parser3.py',92),
  ('import-declaration -> USING ID ;','import-declaration',3,'p_import_declaration','parser3.py',101),
  ('import-declaration -> USING package-complicated-name ;','import-declaration',3,'p_import_declaration','parser3.py',102),
  ('main-code -> main-code main','main-code',2,'p_main_code','parser3.py',112),
  ('main-code -> <empty>','main-code',0,'p_main_code','parser3.py',113),
  ('main -> ID ID function-arguments function-body','main',4,'p_main_function_declaration1','parser3.py',119),
  ('main -> complicated-type ID function-arguments function-body','main',4,'p_main_function_declaration1','parser3.py',120),
  ('main -> ID ID template-declaration function-arguments function-body','main',5,'p_main_function_declaration2','parser3.py',131),
  ('main -> complicated-type ID template-declaration function-arguments function-body','main',5,'p_main_function_declaration2','parser3.py',132),
  ('main -> UNSAFE ID ID function-arguments function-body','main',5,'p_main_function_declaration3','parser3.py',142),
  ('main -> UNSAFE complicated-type ID function-arguments function-body','main',5,'p_main_function_declaration3','parser3.py',143),
  ('main -> UNSAFE ID ID template-declaration function-arguments function-body','main',6,'p_main_function_declaration4','parser3.py',154),
  ('main -> UNSAFE complicated-type ID template-declaration function-arguments function-body','main',6,'p_main_function_declaration4','parser3.py',155),
  ('main -> ID OPERATOR binary-operator function-arguments function-body','main',5,'p_main_operator_declaration1','parser3.py',165),
  ('main -> ID OPERATOR TIMES function-arguments function-body','main',5,'p_main_operator_declaration1','parser3.py',166),
  ('main -> ID OPERATOR LS function-arguments function-body','main',5,'p_main_operator_declaration1','parser3.py',167),
  ('main -> ID OPERATOR GR function-arguments function-body','main',5,'p_main_operator_declaration1','parser3.py',168),
  ('main -> complicated-type OPERATOR binary-operator function-arguments function-body','main',5,'p_main_operator_declaration1','parser3.py',169),
  ('main -> complicated-type OPERATOR TIMES function-arguments function-body','main',5,'p_main_operator_declaration1','parser3.py',170),
  ('main -> complicated-type OPERATOR LS function-arguments function-body','main',5,'p_main_operator_declaration1','parser3.py',171),
  ('main -> complicated-type OPERATOR GR function-arguments function-body','main',5,'p_main_operator_declaration1','parser3.py',172),
  ('main -> ID OPERATOR binary-operator template-declaration function-arguments function-body','main',6,'p_main_operator_declaration2','parser3.py',182),
  ('main -> ID OPERATOR TIMES template-declaration function-arguments function-body','main',6,'p_main_operator_declaration2','parser3.py',183),
  ('main -> ID OPERATOR LS template-declaration function-arguments function-body','main',6,'p_main_operator_declaration2','parser3.py',184),
  ('main -> ID OPERATOR GR template-declaration function-arguments function-body','main',6,'p_main_operator_declaration2','parser3.py',185),
  ('main -> complicated-type OPERATOR binary-operator template-declaration function-arguments function-body','main',6,'p_main_operator_declaration2','parser3.py',186),
  ('main -> complicated-type OPERATOR TIMES template-declaration function-arguments function-body','main',6,'p_main_operator_declaration2','parser3.py',187),
  ('main -> complicated-type OPERATOR LS template-declaration function-arguments function-body','main',6,'p_main_operator_declaration2','parser3.py',188),
  ('main -> complicated-type OPERATOR GR template-declaration function-arguments function-body','main',6,'p_main_operator_declaration2','parser3.py',189),
  ('main -> ID OPERATOR binary-operator ( ) function-arguments function-body','main',7,'p_main_operator_declaration3','parser3.py',199),
  ('main -> ID OPERATOR ! ( ) function-arguments function-body','main',7,'p_main_operator_declaration3','parser3.py',200),
  ('main -> complicated-type OPERATOR binary-operator ( ) function-arguments function-body','main',7,'p_main_operator_declaration3','parser3.py',201),
  ('main -> complicated-type OPERATOR ! ( ) function-arguments function-body','main',7,'p_main_operator_declaration3','parser3.py',202),
  ('main -> ID OPERATOR binary-operator ( ) template-declaration function-arguments function-body','main',8,'p_main_operator_declaration31','parser3.py',212),
  ('main -> ID OPERATOR ! ( ) template-declaration function-arguments function-body','main',8,'p_main_operator_declaration31','parser3.py',213),
  ('main -> complicated-type OPERATOR binary-operator ( ) template-declaration function-arguments function-body','main',8,'p_main_operator_declaration31','parser3.py',214),
  ('main -> complicated-type OPERATOR ! ( ) template-declaration function-arguments function-body','main',8,'p_main_operator_declaration31','parser3.py',215),
  ('main -> ID OPERATOR ( ) function-arguments function-body','main',6,'p_main_operator_declaration4','parser3.py',225),
  ('main -> complicated-type OPERATOR ( ) function-arguments function-body','main',6,'p_main_operator_declaration4','parser3.py',226),
  ('main -> OPERATOR ~ function-arguments function-body','main',4,'p_main_operator_declaration5','parser3.py',235),
  ('main -> OPERATOR ~ template-declaration function-arguments function-body','main',5,'p_main_operator_declaration6','parser3.py',244),
  ('main -> ID OPERATOR [ ] function-arguments function-body','main',6,'p_main_operator_declaration7','parser3.py',253),
  ('main -> complicated-type OPERATOR [ ] function-arguments function-body','main',6,'p_main_operator_declaration7','parser3.py',254),
  ('main -> ID OPERATOR [ ] template-declaration function-arguments function-body','main',7,'p_main_operator_declaration8','parser3.py',264),
  ('main -> complicated-type OPERATOR [ ] template-declaration function-arguments function-body','main',7,'p_main_operator_declaration8','parser3.py',265),
  ('main -> ID OPERATOR = function-arguments function-body','main',5,'p_main_operator_declaration9','parser3.py',275),
  ('main -> complicated-type OPERATOR = function-arguments function-body','main',5,'p_main_operator_declaration9','parser3.py',276),
  ('main -> ID OPERATOR = template-declaration function-arguments function-body','main',6,'p_main_operator_declaration10','parser3.py',286),
  ('main -> complicated-type OPERATOR = template-declaration function-arguments function-body','main',6,'p_main_operator_declaration10','parser3.py',287),
  ('main -> EXTERN ID ID function-arguments ;','main',5,'p_main_extern_function_declaration','parser3.py',298),
  ('main -> EXTERN complicated-type ID function-arguments ;','main',5,'p_main_extern_function_declaration','parser3.py',299),
  ('complicated-type -> package-complicated-name : ID','complicated-type',3,'p_complicated_type1','parser3.py',309),
  ('complicated-type -> package-complicated-name : ID TIMES','complicated-type',4,'p_complicated_type1','parser3.py',310),
  ('complicated-type -> package-complicated-name : ID complicated-pointer-level','complicated-type',4,'p_complicated_type1','parser3.py',311),
  ('complicated-type -> ID : ID','complicated-type',3,'p_complicated_type2','parser3.py',321),
  ('complicated-type -> ID : ID TIMES','complicated-type',4,'p_complicated_type2','parser3.py',322),
  ('complicated-type -> ID : ID complicated-pointer-level','complicated-type',4,'p_complicated_type2','parser3.py',323),
  ('complicated-type -> package-complicated-name : ID template-declaration','complicated-type',4,'p_complicated_type3','parser3.py',334),
  ('complicated-type -> package-complicated-name : ID template-declaration TIMES','complicated-type',5,'p_complicated_type3','parser3.py',335),
  ('complicated-type -> package-complicated-name : ID template-declaration complicated-pointer-level','complicated-type',5,'p_complicated_type3','parser3.py',336),
  ('complicated-type -> ID : ID template-declaration','complicated-type',4,'p_complicated_type4','parser3.py',346),
  ('complicated-type -> ID : ID template-declaration TIMES','complicated-type',5,'p_complicated_type4','parser3.py',347),
  ('complicated-type -> ID : ID template-declaration complicated-pointer-level','complicated-type',5,'p_complicated_type4','parser3.py',348),
  ('complicated-type -> ID template-declaration','complicated-type',2,'p_complicated_type5','parser3.py',359),
  ('complicated-type -> ID template-declaration TIMES','complicated-type',3,'p_complicated_type5','parser3.py',360),
  ('complicated-type -> ID template-declaration complicated-pointer-level','complicated-type',3,'p_complicated_type5','parser3.py',361),
  ('complicated-type -> ID TIMES','complicated-type',2,'p_complicated_type6','parser3.py',373),
  ('complicated-type -> ID complicated-pointer-level','complicated-type',2,'p_complicated_type6','parser3.py',374),
  ('complicated-type -> CONST complicated-type','complicated-type',2,'p_complicated_type7','parser3.py',383),
  ('complicated-pointer-level -> complicated-pointer-level TIMES','complicated-pointer-level',2,'p_complicated_pointer_level','parser3.py',390),
  ('complicated-pointer-level -> TIMES TIMES','complicated-pointer-level',2,'p_complicated_pointer_level','parser3.py',391),
  ('template-declaration -> LS template-declaration-body GR','template-declaration',3,'p_template_declaration1','parser3.py',400),
  ('template-declaration -> LS ID GR','template-declaration',3,'p_template_declaration2','parser3.py',406),
  ('template-declaration -> LS complicated-type GR','template-declaration',3,'p_template_declaration3','parser3.py',412),
  ('template-declaration-body -> template-declaration-body , ID','template-declaration-body',3,'p_template_declaration_body1','parser3.py',418),
  ('template-declaration-body -> template-declaration-body , complicated-type','template-declaration-body',3,'p_template_declaration_body1','parser3.py',419),
  ('template-declaration-body -> ID , ID','template-declaration-body',3,'p_template_declaration_body2','parser3.py',429),
  ('template-declaration-body -> complicated-type , ID','template-declaration-body',3,'p_template_declaration_body2','parser3.py',430),
  ('template-declaration-body -> ID , complicated-type','template-declaration-body',3,'p_template_declaration_body3','parser3.py',441),
  ('template-declaration-body -> complicated-type , complicated-type','template-declaration-body',3,'p_template_declaration_body3','parser3.py',442),
  ('function-arguments -> ( function-arguments-body )','function-arguments',3,'p_p_function_arguments','parser3.py',453),
  ('function-arguments -> ( )','function-arguments',2,'p_p_function_arguments','parser3.py',454),
  ('function-arguments-body -> function-arguments-body , function-argument','function-arguments-body',3,'p_function_arguments_body','parser3.py',463),
  ('function-arguments-body -> function-argument','function-arguments-body',1,'p_function_arguments_body','parser3.py',464),
  ('function-argument -> ID ID','function-argument',2,'p_function_argument','parser3.py',474),
  ('function-argument -> complicated-type ID','function-argument',2,'p_function_argument','parser3.py',475),
  ('function-body -> { expression-lines }','function-body',3,'p_function_body','parser3.py',486),
  ('main -> STRUCT ID struct-body','main',3,'p_struct_declaration1','parser3.py',494),
  ('main -> STRUCT ID template-declaration struct-body','main',4,'p_struct_declaration2','parser3.py',501),
  ('main -> EXTERN STRUCT ID struct-body','main',4,'p_extern_struct_declaration1','parser3.py',507),
  ('struct-body -> { struct-fields }','struct-body',3,'p_struct_body','parser3.py',514),
  ('struct-fields -> struct-fields struct-field','struct-fields',2,'p_struct_body_fields','parser3.py',519),
  ('struct-fields -> <empty>','struct-fields',0,'p_struct_body_fields','parser3.py',520),
  ('struct-field -> ID ID ;','struct-field',3,'p_struct_field1','parser3.py',530),
  ('struct-field -> complicated-type ID ;','struct-field',3,'p_struct_field1','parser3.py',531),
  ('struct-field -> ACCMOD ID ID ;','struct-field',4,'p_struct_field2','parser3.py',539),
  ('struct-field -> ACCMOD complicated-type ID ;','struct-field',4,'p_struct_field2','parser3.py',540),
  ('expression-lines -> expression-lines expression-line','expression-lines',2,'p_expression_lines','parser3.py',549),
  ('expression-lines -> expression-line','expression-lines',1,'p_expression_lines','parser3.py',550),
  ('expression-lines -> <empty>','expression-lines',0,'p_expression_lines','parser3.py',551),
  ('expression-line -> complicated-expression ;','expression-line',2,'p_expression_line1','parser3.py',563),
  ('expression-line -> return-statement','expression-line',1,'p_expression_line1','parser3.py',564),
  ('expression-line -> variable-declaration','expression-line',1,'p_expression_line1','parser3.py',565),
  ('expression-line -> if-statement','expression-line',1,'p_expression_line1','parser3.py',566),
  ('expression-line -> while-statement','expression-line',1,'p_expression_line1','parser3.py',567),
  ('expression-line -> unsafe-area','expression-line',1,'p_expression_line1','parser3.py',568),
  ('expression-line -> visibility-area','expression-line',1,'p_expression_line1','parser3.py',569),
  ('expression-line -> set-statement','expression-line',1,'p_expression_line1','parser3.py',570),
  ('expression-line -> ID ;','expression-line',2,'p_expression_line2','parser3.py',575),
  ('return-statement -> RETURN complicated-expression ;','return-statement',3,'p_return_statement','parser3.py',580),
  ('return-statement -> RETURN ID ;','return-statement',3,'p_return_statement','parser3.py',581),
  ('variable-declaration -> ID ID ;','variable-declaration',3,'p_variable_declaration1','parser3.py',591),
  ('variable-declaration -> complicated-type ID ;','variable-declaration',3,'p_variable_declaration1','parser3.py',592),
  ('variable-declaration -> ID ID = ID ;','variable-declaration',5,'p_variable_declaration2','parser3.py',601),
  ('variable-declaration -> complicated-type ID = ID ;','variable-declaration',5,'p_variable_declaration2','parser3.py',602),
  ('variable-declaration -> ID ID = complicated-expression ;','variable-declaration',5,'p_variable_declaration3','parser3.py',613),
  ('variable-declaration -> complicated-type ID = complicated-expression ;','variable-declaration',5,'p_variable_declaration3','parser3.py',614),
  ('variable-declaration -> VAR ID = ID ;','variable-declaration',5,'p_variable_declaration4','parser3.py',622),
  ('variable-declaration -> VAR ID = complicated-expression ;','variable-declaration',5,'p_variable_declaration4','parser3.py',623),
  ('if-statement -> IF complicated-expression visibility-area','if-statement',3,'p_if_statement1','parser3.py',634),
  ('if-statement -> IF complicated-expression visibility-area ELSE visibility-area','if-statement',5,'p_if_statement1','parser3.py',635),
  ('if-statement -> IF complicated-expression visibility-area ELSE if-statement','if-statement',5,'p_if_statement1','parser3.py',636),
  ('if-statement -> IF ID visibility-area','if-statement',3,'p_if_statement2','parser3.py',646),
  ('if-statement -> IF ID visibility-area ELSE visibility-area','if-statement',5,'p_if_statement2','parser3.py',647),
  ('if-statement -> IF ID visibility-area ELSE if-statement','if-statement',5,'p_if_statement2','parser3.py',648),
  ('while-statement -> WHILE complicated-expression visibility-area','while-statement',3,'p_while_statement1','parser3.py',659),
  ('while-statement -> WHILE ID visibility-area','while-statement',3,'p_while_statement2','parser3.py',664),
  ('unsafe-area -> UNSAFE visibility-area','unsafe-area',2,'p_unsafe_area','parser3.py',670),
  ('complicated-expression -> UNSAFE complicated-expression','complicated-expression',2,'p_unsafe_expression','parser3.py',674),
  ('complicated-expression -> [ ]','complicated-expression',2,'p_array_creation_expression1','parser3.py',678),
  ('complicated-expression -> [ ID ]','complicated-expression',3,'p_array_creation_expression2','parser3.py',683),
  ('complicated-expression -> [ complicated-expression ]','complicated-expression',3,'p_array_creation_expression2','parser3.py',684),
  ('complicated-expression -> [ invoke-arguments-list ]','complicated-expression',3,'p_array_creation_expression3','parser3.py',692),
  ('complicated-expression -> ID { invoke-arguments-list }','complicated-expression',4,'p_struct_construct_expression1','parser3.py',697),
  ('complicated-expression -> complicated-type { invoke-arguments-list }','complicated-expression',4,'p_struct_construct_expression1','parser3.py',698),
  ('complicated-expression -> ID { ID }','complicated-expression',4,'p_struct_construct_expression2','parser3.py',707),
  ('complicated-expression -> ID { complicated-expression }','complicated-expression',4,'p_struct_construct_expression2','parser3.py',708),
  ('complicated-expression -> complicated-type { ID }','complicated-expression',4,'p_struct_construct_expression2','parser3.py',709),
  ('complicated-expression -> complicated-type { complicated-expression }','complicated-expression',4,'p_struct_construct_expression2','parser3.py',710),
  ('complicated-expression -> ID { }','complicated-expression',3,'p_struct_construct_expression3','parser3.py',723),
  ('complicated-expression -> complicated-type { }','complicated-expression',3,'p_struct_construct_expression3','parser3.py',724),
  ('complicated-expression -> ID [ ID ]','complicated-expression',4,'p_square_brackets_expression','parser3.py',733),
  ('complicated-expression -> ID [ complicated-expression ]','complicated-expression',4,'p_square_brackets_expression','parser3.py',734),
  ('complicated-expression -> complicated-expression [ ID ]','complicated-expression',4,'p_square_brackets_expression','parser3.py',735),
  ('complicated-expression -> complicated-expression [ complicated-expression ]','complicated-expression',4,'p_square_brackets_expression','parser3.py',736),
  ('set-statement -> ID = ID ;','set-statement',4,'p_set_statement1','parser3.py',749),
  ('set-statement -> complicated-expression = ID ;','set-statement',4,'p_set_statement1','parser3.py',750),
  ('set-statement -> ID = complicated-expression ;','set-statement',4,'p_set_statement2','parser3.py',762),
  ('set-statement -> complicated-expression = complicated-expression ;','set-statement',4,'p_set_statement2','parser3.py',763),
  ('visibility-area -> function-body','visibility-area',1,'p_visibility_area','parser3.py',774),
  ('constant-expression -> INT','constant-expression',1,'p_constant_expression','parser3.py',779),
  ('constant-expression -> FLOAT','constant-expression',1,'p_constant_expression','parser3.py',780),
  ('constant-expression -> STR','constant-expression',1,'p_constant_expression','parser3.py',781),
  ('constant-expression -> BOOL','constant-expression',1,'p_constant_expression','parser3.py',782),
  ('constant-expression -> CHAR','constant-expression',1,'p_constant_expression','parser3.py',783),
  ('complicated-expression -> TIMES ID','complicated-expression',2,'p_unpack_expression','parser3.py',788),
  ('complicated-expression -> TIMES complicated-expression','complicated-expression',2,'p_unpack_expression','parser3.py',789),
  ('complicated-expression -> AND ID','complicated-expression',2,'p_pack_expression','parser3.py',797),
  ('complicated-expression -> AND complicated-expression','complicated-expression',2,'p_pack_expression','parser3.py',798),
  ('complicated-expression -> ID . ID','complicated-expression',3,'p_getter_expression','parser3.py',806),
  ('complicated-expression -> complicated-expression . ID','complicated-expression',3,'p_getter_expression','parser3.py',807),
  ('complicated-expression -> SIZEOF ( ID )','complicated-expression',4,'p_sizeof_expression','parser3.py',816),
  ('complicated-expression -> SIZEOF ( complicated-type )','complicated-expression',4,'p_sizeof_expression','parser3.py',817),
  ('complicated-expression -> ID invoke-arguments','complicated-expression',2,'p_function_invoke_expression1','parser3.py',825),
  ('complicated-expression -> ID : ID invoke-arguments','complicated-expression',4,'p_function_invoke_expression2','parser3.py',830),
  ('complicated-expression -> package-complicated-name : ID invoke-arguments','complicated-expression',4,'p_function_invoke_expression3','parser3.py',835),
  ('complicated-expression -> ID template-declaration invoke-arguments','complicated-expression',3,'p_function_invoke_expression4','parser3.py',840),
  ('complicated-expression -> ID : ID template-declaration invoke-arguments','complicated-expression',5,'p_function_invoke_expression5','parser3.py',845),
  ('complicated-expression -> package-complicated-name : ID template-declaration invoke-arguments','complicated-expression',5,'p_function_invoke_expression6','parser3.py',850),
  ('complicated-expression -> ID . ID invoke-arguments','complicated-expression',4,'p_method_invoke_expression1','parser3.py',855),
  ('complicated-expression -> complicated-expression . ID invoke-arguments','complicated-expression',4,'p_method_invoke_expression1','parser3.py',856),
  ('complicated-expression -> ID . ID template-declaration invoke-arguments','complicated-expression',5,'p_method_invoke_expression2','parser3.py',864),
  ('complicated-expression -> complicated-expression . ID template-declaration invoke-arguments','complicated-expression',5,'p_method_invoke_expression2','parser3.py',865),
  ('invoke-arguments -> ( )','invoke-arguments',2,'p_function_invoke_arguments1','parser3.py',873),
  ('invoke-arguments -> ( ID )','invoke-arguments',3,'p_function_invoke_arguments2','parser3.py',878),
  ('invoke-arguments -> ( complicated-expression )','invoke-arguments',3,'p_function_invoke_arguments2','parser3.py',879),
  ('invoke-arguments -> ( invoke-arguments-list )','invoke-arguments',3,'p_function_invoke_arguments3','parser3.py',888),
  ('invoke-arguments-list -> invoke-arguments-list , ID','invoke-arguments-list',3,'p_function_invoke_arguments_list1','parser3.py',893),
  ('invoke-arguments-list -> invoke-arguments-list , complicated-expression','invoke-arguments-list',3,'p_function_invoke_arguments_list1','parser3.py',894),
  ('invoke-arguments-list -> ID , ID','invoke-arguments-list',3,'p_function_invoke_arguments_list2','parser3.py',904),
  ('invoke-arguments-list -> complicated-expression , ID','invoke-arguments-list',3,'p_function_invoke_arguments_list2','parser3.py',905),
  ('invoke-arguments-list -> ID , complicated-expression','invoke-arguments-list',3,'p_function_invoke_arguments_list3','parser3.py',914),
  ('invoke-arguments-list -> complicated-expression , complicated-expression','invoke-arguments-list',3,'p_function_invoke_arguments_list3','parser3.py',915),
  ('complicated-expression -> ID binary-operator ID','complicated-expression',3,'p_complicated_expression1','parser3.py',923),
  ('complicated-expression -> ID TIMES ID','complicated-expression',3,'p_complicated_expression1','parser3.py',924),
  ('complicated-expression -> ID LS ID','complicated-expression',3,'p_complicated_expression1','parser3.py',925),
  ('complicated-expression -> ID GR ID','complicated-expression',3,'p_complicated_expression1','parser3.py',926),
  ('complicated-expression -> complicated-expression binary-operator ID','complicated-expression',3,'p_complicated_expression1','parser3.py',927),
  ('complicated-expression -> complicated-expression LS ID','complicated-expression',3,'p_complicated_expression1','parser3.py',928),
  ('complicated-expression -> complicated-expression GR ID','complicated-expression',3,'p_complicated_expression1','parser3.py',929),
  ('complicated-expression -> complicated-expression TIMES ID','complicated-expression',3,'p_complicated_expression1','parser3.py',930),
  ('complicated-expression -> ID binary-operator complicated-expression','complicated-expression',3,'p_complicated_expression1','parser3.py',931),
  ('complicated-expression -> ID LS complicated-expression','complicated-expression',3,'p_complicated_expression1','parser3.py',932),
  ('complicated-expression -> ID GR complicated-expression','complicated-expression',3,'p_complicated_expression1','parser3.py',933),
  ('complicated-expression -> ID TIMES complicated-expression','complicated-expression',3,'p_complicated_expression1','parser3.py',934),
  ('complicated-expression -> complicated-expression binary-operator complicated-expression','complicated-expression',3,'p_complicated_expression1','parser3.py',935),
  ('complicated-expression -> complicated-expression LS complicated-expression','complicated-expression',3,'p_complicated_expression1','parser3.py',936),
  ('complicated-expression -> complicated-expression GR complicated-expression','complicated-expression',3,'p_complicated_expression1','parser3.py',937),
  ('complicated-expression -> complicated-expression TIMES complicated-expression','complicated-expression',3,'p_complicated_expression1','parser3.py',938),
  ('complicated-expression -> MINUS ID','complicated-expression',2,'p_complicated_expression2','parser3.py',951),
  ('complicated-expression -> MINUS complicated-expression','complicated-expression',2,'p_complicated_expression2','parser3.py',952),
  ('complicated-expression -> ! ID','complicated-expression',2,'p_complicated_expression2','parser3.py',953),
  ('complicated-expression -> ! complicated-expression','complicated-expression',2,'p_complicated_expression2','parser3.py',954),
  ('complicated-expression -> constant-expression','complicated-expression',1,'p_complicated_expression4','parser3.py',963),
  ('complicated-expression -> ( ID )','complicated-expression',3,'p_complicated_expression5','parser3.py',968),
  ('complicated-expression -> ( complicated-expression )','complicated-expression',3,'p_complicated_expression5','parser3.py',969),
  ('complicated-expression -> ( ID ) ID','complicated-expression',4,'p_complicated_expression6','parser3.py',979),
  ('complicated-expression -> ( ID ) complicated-expression','complicated-expression',4,'p_complicated_expression6','parser3.py',980),
  ('complicated-expression -> ( complicated-type ) ID','complicated-expression',4,'p_complicated_expression7','parser3.py',990),
  ('complicated-expression -> ( complicated-type ) complicated-expression','complicated-expression',4,'p_complicated_expression7','parser3.py',991),
  ('sub-equal-operator -> PLUSEQ','sub-equal-operator',1,'p_eq_operator','parser3.py',1000),
  ('sub-equal-operator -> MINUSEQ','sub-equal-operator',1,'p_eq_operator','parser3.py',1001),
  ('sub-equal-operator -> TIMESEQ','sub-equal-operator',1,'p_eq_operator','parser3.py',1002),
  ('sub-equal-operator -> DIVIDEEQ','sub-equal-operator',1,'p_eq_operator','parser3.py',1003),
  ('sub-equal-operator -> MODEQ','sub-equal-operator',1,'p_eq_operator','parser3.py',1004),
  ('sub-equal-operator -> ANDEQ','sub-equal-operator',1,'p_eq_operator','parser3.py',1005),
  ('sub-equal-operator -> OREQ','sub-equal-operator',1,'p_eq_operator','parser3.py',1006),
  ('sub-equal-operator -> XOREQ','sub-equal-operator',1,'p_eq_operator','parser3.py',1007),
  ('sub-equal-operator -> LSHIFTEQ','sub-equal-operator',1,'p_eq_operator','parser3.py',1008),
  ('sub-equal-operator -> RSHIFTEQ','sub-equal-operator',1,'p_eq_operator','parser3.py',1009),
  ('complicated-expression -> ID sub-equal-operator ID','complicated-expression',3,'p_complicated_expression8','parser3.py',1014),
  ('complicated-expression -> complicated-expression sub-equal-operator ID','complicated-expression',3,'p_complicated_expression8','parser3.py',1015),
  ('complicated-expression -> ID sub-equal-operator complicated-expression','complicated-expression',3,'p_complicated_expression8','parser3.py',1016),
  ('complicated-expression -> complicated-expression sub-equal-operator complicated-expression','complicated-expression',3,'p_complicated_expression8','parser3.py',1017),
  ('binary-operator -> PLUS','binary-operator',1,'p_binary_operator','parser3.py',1029),
  ('binary-operator -> MINUS','binary-operator',1,'p_binary_operator','parser3.py',1030),
  ('binary-operator -> DIVIDE','binary-operator',1,'p_binary_operator','parser3.py',1031),
  ('binary-operator -> MOD','binary-operator',1,'p_binary_operator','parser3.py',1032),
  ('binary-operator -> AND','binary-operator',1,'p_binary_operator','parser3.py',1033),
  ('binary-operator -> OR','binary-operator',1,'p_binary_operator','parser3.py',1034),
  ('binary-operator -> XOR','binary-operator',1,'p_binary_operator','parser3.py',1035),
  ('binary-operator -> LSHIFT','binary-operator',1,'p_binary_operator','parser3.py',1036),
  ('binary-operator -> RSHIFT','binary-operator',1,'p_binary_operator','parser3.py',1037),
  ('binary-operator -> LE','binary-operator',1,'p_binary_operator','parser3.py',1038),
  ('binary-operator -> GE','binary-operator',1,'p_binary_operator','parser3.py',1039),
  ('binary-operator -> EE','binary-operator',1,'p_binary_operator','parser3.py',1040),
  ('binary-operator -> NE','binary-operator',1,'p_binary_operator','parser3.py',1041),
]
